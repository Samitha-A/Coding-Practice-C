#include<stdio.h>
#include<string.h>

char longestPalindrome(char* str){
    int n=strlen(str);
    int dp[n][n];
    for(int i=0; i<n; i++){
        dp[i][i]=1;
    }
    int start=0, maxlength=1;
    for(int i=0; i<n-1; i++){
        if(str[i]==str[i+1]){
            dp[i][i+1]=1;
            start=i;
            maxlength=2;
        }
    }
    for(int length=3; length<=n; length++){
        for(int i=0; i<n-length+1; i++){
            int j=i+length-1;
            if(str[i]==str[j]&&dp[i+1][j-1]==1){
                dp[i][j]=1;
                if(length>maxlength){
                    start=i;
                    maxlength=length;
                }
            }
        }
    }
    for(int i=start; i<start+maxlength; i++){
        printf("%c",str[i]);
    }
}

int main(){
    char str[100];
    scanf("%s",str);
    longestPalindrome(str);
}


--------------------------------------------------------------------------------------------------------------------------------------------------------------------
#include<stdio.h>
#include<string.h>
int main()
{
    char arr[1000];
    scanf("%[^\n]",arr);
    int n=strlen(arr);
    int ispalindrome;
    int maxlength=1;
    
    int start=0;
    if(n==1)
    {
        printf("%s",arr);
    }
    for(int i=0;i<n-1;i++)
    {
        if(arr[i]==arr[i+1])
        {
            maxlength=2;
            start=i;
            break;
        }
        
    }
    for(int i=0;i<n;i++)
    {
        for(int j=i+2;j<n;j++)
        {
            int len=j-i+1;
            if(len>maxlength)
            {
            ispalindrome=1;
            for(int k=0;k<len/2;k++)
            {
                if(arr[k+i]!=arr[j-k])
                {
                     ispalindrome=0;
                    break;
                }
            }
            
            if(ispalindrome)
            {
                maxlength=len;
                start=i;
            }
            }
        }
    }
    for(int i=start;i<=start+maxlength-1;i++)
    {
        printf("%c",arr[i]);
    }
}
